RubyGems

Sometimes, developers writing code noteice that they've written somethign that might
be useful to others. If they are nice people, they package that code up into a 
gem (also often called a library outside of Ruby contexts) and share it with
the world. THis can be anything from a few short methods to a web framework
as large as Rails.

Let's see how to find, install and use a gem.

FINDING GEMS

The single best place to find gems to use is GitHub. I often just simply Google 
around for what I want to do, read StackOverflow for suggestions, and then 
look at the gem's GitHub repo to see if it's what I want.

On GitHub you can see how many people have followed the repository, and how 
recently it has been updated. Gems that have >1k follows are mainstream and 
can be relied upon to be pretty much rock-solid and typically very well 
documented. Gems with more than 500 follows are fairly popular, but it may be 
harder to find answers to problems by searching around. Gems with less than 500 
follows are not super popular, and might not be be quite as well maintained. 
Generally I won't use a gem with <100 follows; I like to let others 
solve bugs for me :-)

INSTALLING GEMS

Let's check out Awesome Print, a library that "pretty prints" Ruby output 
(NB: pry already prettifies output, so awesome_print won't seem as awesome 
as if we were using plain irb).

The Awesome Print GitHub shows us how to install the gem: 
gem install awesome_print. That's it!

-- sudo gem install -- and rbenv

If you aren't using rbenv, you will run into an error message like this:

~$ gem install awesome_print
Fetching: awesome_print-1.1.0.gem (100%)
ERROR:  While executing gem ... (Gem::FilePermissionError)
    You don't have write permissions into the /Library/Ruby/Gems/1.8 directory.

This is because the built-in Ruby that comes with OS X installs gems in a system 
directory where you need superuser permissions to create files. You'll read 
in some places that you should use sudo gem install awesome_print; DO NOT DO THIS!

Instead, setup rbenv (See the dev environment setup instructions for more details). 
Accessing this on GitHub? Use this link. Once rbenv is installed, there will be 
no need to use sudo and you should no longer get this error. However, you must 
never use sudo gem install with rbenv or you'll wind up with permissions 
issues again.

USING GEMS

We should now be able to require source files provided by the gem
[1] pry(main)> require 'awesome_print'
=> true
[2] pry(main)> ap({:this => "is totally awesome!"})
{
    :this => "is totally awesome!"
}
=> nil

You'll need to read up on how to use your newly installed gem. The github 
often has examples that show you the most common methods and how they are used. 
Well documented libraries like RSpec have whole websites of documentation. 
Documentation is normally linked to on the GitHub page; else I do a quick 
Google search.

Documentation can often be spotty and incomplete. In that case, you may have to 
explore the code itself on GitHub to try to figure out how things work.